package week5;



import java.util.Vector;

import main.Manager.Tasks;

public class task1 implements Tasks
{
	@Override
	
	public void run() 
	{
		//int length = 3;
		//int[] n1 = {1,2,3,4,1,5,1,6,7};
		Vector<Integer> seq1 = new Vector<Integer>();
		seq1.add(new Integer(1));
		seq1.add(new Integer(2));
		seq1.add(new Integer(3));
		seq1.add(new Integer(4));
		seq1.add(new Integer(1));
		seq1.add(new Integer(5));
		seq1.add(new Integer(1));
		seq1.add(new Integer(6));
		seq1.add(new Integer(7));
		System.out.println("The default array is:");
		for (int i = 0; i < seq1.size(); i++) 
		{
			System.out.print(seq1.get(i) + " ");
		}
		
		main.Manager.consoleSpace(1);
		Vector<Integer> subSeq = subSequencer(seq1);
		
		
		System.out.println("The smaller array is:");
		for (int i = 0; i < subSeq.size(); i++) 
		{
			System.out.print(subSeq.get(i) + " ");
		}
		
		main.Manager.consoleSpace(1);
		
		System.out.println("Rerun Code  y / n");
		String choice2 = main.Manager.read.next();
		if (choice2.equals("y")) run();	
		
		
	}

	public Vector<Integer> subSequencer(Vector<Integer> sequence)
	{
		int count = 0;
		int tempStart = 0;
				
		int bestLength = 0;
		int bestStart = 0;
		
		for (int i = 0; i < sequence.size() - 1; i++)
		{
			count ++;
			if (sequence.get(i) > sequence.get(i+1))
			{
				
				if (count > bestLength)
				{
					bestLength = count;
					bestStart = tempStart;
				}
				
				count = 0;
				tempStart = i+1;
			}
		}
		
		if (count > bestLength)
		{
			bestLength = count;
			bestStart = tempStart;
		}
		

		
		Vector<Integer> subSequence = new Vector<Integer>();
		for (int j = bestStart; j < bestLength; j++)
		{
			subSequence.add(sequence.get(j));
		}
		
		return subSequence;
	}


}
